--- 
title: "CHILD MORTALITY RATE,UNDER AGE FIVE 2018"
author: "Rosaline Pineteh"
format: 
  dashboard:
    logo: images/LOGO_IMAGE.png
    nav-buttons: [github]
    github: https://github.com/YOUR_URL
theme: lux
execute:
  echo: false
  warning: false
  message: false
---

```{r }
# Load packages 
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, 
               here,
               sf,
               bslib, 
               bsicons,
               rnaturalearth, 
               plotly, 
               countrycode, 
               htmltools, 
               reactable,
               janitor, 
               gapminder,
               shiny
               )
```

```{r}
# Data Munging

child <- read_csv(here("Data/child_mortality_0_5_year_olds_dying_per_1000_born.csv"))

child_18 <- child %>% 
  select("country", "2018") %>% 
  rename(child_mortality_2018 ="2018") %>% 
  mutate(child_mortality_2018 = round(child_mortality_2018, digits= 1))  
```


```{r}
highest_child_mortality <- child_18 %>% 
arrange(desc(child_mortality_2018)) %>% 
head(1) %>% 
pull(child_mortality_2018) 
```

```{r}
highest_child_mortality_country <- 
  child_18 %>% 
  arrange(desc(child_mortality_2018)) %>% 
  head(1) %>% 
  pull(country) 

```


```{r}
lowest_child_mortality <- 
  child_18 %>% 
  arrange(child_mortality_2018) %>% 
  head(1) %>% 
  pull(child_mortality_2018)
```

```{r}
lowest_child_mortality_country <- 
  child_18 %>% 
  arrange(child_mortality_2018) %>% 
  head(1) %>% 
  pull(country)
```



```{r}
child_top_10 <- child_18 %>% 
  arrange(desc(child_mortality_2018)) %>% 
  head(10) %>% mutate(tooltip_label = paste(country,"Child mortality rate ", child_mortality_2018, sep= ": "))


 plot_child_top_10 <-child_top_10 %>% 
   ggplot(aes(y=reorder(country, child_mortality_2018), 
              x= child_mortality_2018, 
              fill= child_mortality_2018,
              text = tooltip_label)) +
  geom_col()+
  geom_text(aes(label=child_mortality_2018),
            nudge_x =-10,
            color= "White") +
  labs(y= "Country",
       x= "Child Mortality") +
   theme_minimal()+
  theme(legend.position = "none")

plot_child_top_10_plotly <- ggplotly(plot_child_top_10, tooltip= "text") 
```

```{r}

child_18 <- child_18 %>% mutate(
  country_code = countrycode(country,
                            "country.name",
                            "iso3c")
)

countries <- rnaturalearth::ne_countries()

mismatched_countries <- anti_join(child_18, countries, by = c("country_code" = "adm0_a3"))

child_countries <- countries %>%  
  left_join(child_18, by = c("adm0_a3" = "country_code")) %>% 
  mutate(tooltip_label = paste(country, "Child mortality rate ", child_mortality_2018, sep= ": ") )


child_map <- child_countries %>% 
  ggplot() +
  geom_sf(aes(fill = child_mortality_2018, text = tooltip_label))+
  theme_void()+
  theme(legend.position = "none")

child_map_plotly <- ggplotly(child_map, tooltip= "text") %>% 
  layout(annotations= list(text= "Source: Gapminder, source_url:http://gapm.io/du5mr", x=1, y=0, 
                           xref= 'paper', yref= 'paper',
                           xanchor= 'right', yanchor = 'bottom',
                           showarrow= FALSE))
```


```{r}
child_top5_trend <- child %>% 
  select(country,"2008" : "2018") %>% 
  filter(country %in% c("Somalia", "Nigeria", "Chad", "Central African Republic", "Sierra Leone")) #filter Top 5 countries with highest child mortality
```


```{r}
child_top5_trend <- child %>% 
  select(country,"2008" : "2018") %>% 
  filter(country %in% c("Somalia", "Nigeria", "Chad", "Central African Republic", "Sierra Leone"))

pivot_child <- child_top5_trend %>% pivot_longer(cols= "2008":"2018", names_to = "year", values_to = "child_mortality")

# Convert year to numeric for proper plotting
pivot_child$year <- as.numeric(pivot_child$year)

child_plot_trend <- pivot_child %>%
  ggplot(aes(x = year, y = child_mortality, 
             color = country,  group = country)) +
  geom_line() +
  labs(x = "Year",
       y = "Child Mortality Rate") +
  theme_minimal() +
  theme(legend.title = element_blank())

child_plot_trend_plotly <- ggplotly(child_plot_trend)

```


```{r}
#countries with lowest child mortality in 2018
 lowest_child_mortality_top5 <- child_18 %>% 
  arrange(child_mortality_2018) %>% 
  head(5) %>% 
  pull(country)
 

#exploring a 10 year trend in child mortality for countries with lowest child mortality
child_plot_trend_low <- child %>%
  select(country,"2008" : "2018") %>%
  filter(country %in% c("Finland", "Iceland", "San Marino", "Hong Kong, China", "Slovenia")) #filter top 5 countries with lowest child mortality rate

pivot_child_low <- child_plot_trend_low %>% pivot_longer(cols= "2008":"2018", names_to = "year", values_to = "child_mortality")

# Convert year to numeric for proper plotting
pivot_child_low$year <- as.numeric(pivot_child_low$year)

child_plot_trend_low <- pivot_child_low %>%
  ggplot(aes(x = year, y = child_mortality, color = country,  group = country)) +
  geom_line() +
  labs(x = "Year",
       y = "Child Mortality Rate") +
  theme_minimal() +
  theme(legend.title = element_blank())

child_plot_trend_low_plotly <- ggplotly(child_plot_trend_low)
```

# HOME

## Row 1{height=30%}
```{r}
value_box(
  title = "Highest Child Mortality",
  value = highest_child_mortality,
  showcase = bsicons::bs_icon("hospital"),
  theme = value_box_theme(bg = "#518fd6"),
    p(paste0("(", highest_child_mortality_country, ")"))
)
```


```{r}
value_box(
  title = "Lowest Child Mortality",
  value = lowest_child_mortality,
  showcase = bsicons::bs_icon("hospital"),
  theme = value_box_theme(bg = "#214773"),
    p(paste0("(", lowest_child_mortality_country, ")"))
)
```


## Row 2{height=70%}

### {width=30%}
```{r title= "Top 10 Countries by Child Mortality"}
plot_child_top_10_plotly
```

### {width=70%}
```{r title= "Map of countries by Child Mortality 2018"}

child_map_plotly
```

# CHILD MORTALITY TRENDS: 

## Row 1{height=100%}

### {width=60%}

```{r title = "Trend of Child Mortality in Top 5 Countries with Highest Child Mortality: 2008-2018"}

child_plot_trend_plotly
```

### {width=40%}

```{r title = "Trend of Child Mortality in Top 5 Countries with Lowest Child Mortality: 2008-2018"}

child_plot_trend_low_plotly
```


# DOWNLOAD DATA
The data used in this dashboard is shown below and can be downloaded as  CSV.
```{r}
htmltools::browsable(
  tagList(
    reactable(
      data = child,  
      searchable = TRUE,  # Optional: Enable searching
      defaultPageSize = 10,  # Optional: Set default page size
      pagination = TRUE  # Optional: Enable pagination if needed
    ),
    tags$button(
      "Download as CSV",
      onclick = "Reactable.downloadDataCSV('child')"
    )
  )
)

```

# ABOUT


The data in this dashboard is sourced from the r package "gapminder" package and is originally sourced from the Gapminder Foundation.

Gapminder Foundation is a non-profit venture registered in Stockholm, Sweden, that promotes sustainable global development and achievement of the United Nations Millennium Development Goals by increased use and understanding of statistics and other information about social, economic, and environmental development at local, national, and global levels.

Gapminder was founded in 2005 by Ola Rosling, Anna Rosling RÃ¶nnlund, and Hans Rosling. The name Gapminder was derived from the "Mind the Gap" warning messages on the London Underground.

An example of one of Hans Roslins video is shown below.

<iframe width="560" height="315" src="https://www.youtube.com/embed/hVimVzgtD6w?si=euSx16QgKNs1AY_R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>






